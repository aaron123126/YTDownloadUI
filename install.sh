#!/bin/bash

# ytdl-tui installer script
# A script to install ytdl-tui and its dependencies.

# Exit immediately if a command exits with a non-zero status.
set -e

echo "Starting ytdl-tui installation..."

# Step 2: Privilege Checks
# The script needs to write to /usr/local/, which requires root privileges.
if [ "$(id -u)" -ne 0 ]; then
    echo "This script must be run as root. Please use 'sudo ./install.sh'." >&2
    exit 1
fi

# Step 3: Dependency Checks
echo "Checking dependencies..."

# Function to check if a command exists
command_exists() {
    command -v "$1" >/dev/null 2>&1
}

# --- Check for curl or wget ---
DOWNLOADER=""
if command_exists curl; then
    DOWNLOADER="curl -sL"
    echo "curl is available."
elif command_exists wget; then
    DOWNLOADER="wget -qO-"
    echo "wget is available."
else
    echo "Error: This installer requires curl or wget. Please install one and try again." >&2
    exit 1
fi

# --- Check and install yt-dlp ---
install_yt_dlp() {
    if command_exists yt-dlp; then
        echo "yt-dlp is already installed."
    else
        echo "Installing yt-dlp to /usr/local/bin..."
        $DOWNLOADER "https://github.com/yt-dlp/yt-dlp/releases/latest/download/yt-dlp" > /usr/local/bin/yt-dlp
        chmod a+rx /usr/local/bin/yt-dlp
        echo "yt-dlp installed successfully."
    fi
}

# --- Check and install Node.js and npm ---
install_node() {
    if command_exists node && command_exists npm; then
        echo "Node.js and npm are already installed."
    else
        echo "Attempting to install Node.js and npm..."
        if command_exists apt-get; then
            apt-get update
            apt-get install -y nodejs npm
        elif command_exists yum; then
            yum install -y nodejs
        elif command_exists dnf; then
            dnf install -y nodejs
        elif command_exists pacman; then
            pacman -S --noconfirm nodejs npm
        else
            echo "Error: Could not find a supported package manager (apt, yum, dnf, pacman)." >&2
            echo "Please install Node.js (v12+) and npm manually and try again." >&2
            exit 1
        fi
        echo "Node.js and npm installed successfully."
    fi
}

# Execute dependency checks
install_yt_dlp
install_node

# Step 4: Application Installation
echo "Installing ytdl-tui application..."

INSTALL_DIR="/usr/local/lib/ytdl"
# List of files to install
REPO_FILES=("index.js" "package.json" "package-lock.json" "settings.js" "torrent.js" "GEMINI.md" "README.md" ".gitignore")

# Create installation directory
echo "Creating installation directory at $INSTALL_DIR"
mkdir -p "$INSTALL_DIR"

# Copy application files
# This assumes the installer is run from the root of the repository.
echo "Copying application files..."
for file in "${REPO_FILES[@]}"; do
    # Check if file exists before copying
    if [ -e "$file" ]; then
        cp -r "$file" "$INSTALL_DIR/"
    else
        echo "Warning: File '$file' not found, skipping."
    fi
done

# Install node dependencies
echo "Installing Node.js dependencies in $INSTALL_DIR..."
npm install --prefix "$INSTALL_DIR"

echo "Application files installed."

# Step 5: Create 'ytd' executable
echo "Creating 'ytd' command..."

YTD_CMD_PATH="/usr/local/bin/ytd"
INSTALL_DIR="/usr/local/lib/ytdl" # This is already defined in Step 4

# Using a heredoc to create the wrapper script.
# This avoids issues with quotes and sudo.
cat > "$YTD_CMD_PATH" << EOF
#!/bin/bash
# Wrapper script for ytdl-tui
# This script was generated by the ytdl-tui installer.

# The directory where ytdl-tui is installed
APP_DIR="$INSTALL_DIR"

# Change to the application directory and run the main script with Node.js
# Pass all command-line arguments ("\$@") to the node script
cd "\$APP_DIR" && node index.js "\$@"
EOF

# Make the wrapper script executable
chmod +x "$YTD_CMD_PATH"

echo "'ytd' command created at $YTD_CMD_PATH"

echo "Installation complete!"
echo "You can now run the application by typing 'ytd' in your terminal."

exit 0
